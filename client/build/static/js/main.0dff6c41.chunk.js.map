{"version":3,"sources":["components/Pet.js","components/Pets.js","components/NewPet.js","components/ThisPet.js","components/EditPet.js","App.js","serviceWorker.js","index.js"],"names":["Pet","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","pet","name","species","Link","to","_id","Component","Pets","_this","componentDidMount","axios","get","then","res","setState","pets","data","catch","err","console","log","state","map","components_Pet","key","NewPet","allPets","handleName","e","p","objectSpread","target","value","handleSpecies","handleDescription","description","handleFirstSkill","skills","handleSecondSkill","handleThirdSkill","handleSubmit","preventDefault","post","status","errors","history","push","duplicate","_this$state$pet","onSubmit","type","onChange","message","ThisPet","match","params","concat","like","likes","put","refs","btn","setAttribute","adopt","id","delete","i","ref","onClick","EditPet","oldPet","newPet","cancel","_this$state$newPet","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0dff6c41.chunk.js","sourcesContent":["import {Component} from \"react\";\nimport React from \"react\";\nimport \"react-router\";\nimport {\n  Link\n} from 'react-router-dom';\n\nclass Pet extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render () {\n    return (\n      <tr className=\"single-pet\">\n        <td>{this.props.pet.name}</td>\n        <td>{this.props.pet.species}</td>\n        <td className=\"colwidth0\">\n          <Link className=\"btn btn-outline-secondary\" to={'/pet/' + this.props.pet._id}>Details</Link>\n          <Link className=\"btn btn-outline-secondary\" to={'/pets/' + this.props.pet._id + '/edit'}>Edit</Link>\n        </td>\n      </tr>\n    )\n  }\n}\n\nexport default Pet;","import {Component} from \"react\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport Pet from './Pet'\n\nclass Pets extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      pets: []\n    }\n  }\n\n  componentDidMount = () => {\n    axios.get('http://localhost:8000/pets').then ( res => {\n      this.setState({\n        pets: res.data.pets\n      })\n    }).catch ( err => {\n      console.log(err);\n    })\n  };\n\n  render () {\n    return (\n      <div className=\"table-div\">\n        <table className=\"table table-striped table-light\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Species</th>\n              <th className=\"colwidth0\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              this.state.pets.map((pet) =>\n                <Pet key={pet._id} pet={pet} />\n              )\n            }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default Pets;","import {Component} from \"react\";\nimport React from \"react\";\nimport axios from 'axios';\n\nclass NewPet extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      pet: {\n        name: '',\n        species: '',\n        description: '',\n        skills: ['','','']\n      },\n      errors: {\n        name: '',\n        species: '',\n        description: '',\n        duplicate: ''\n      },\n      allPets: []\n    }\n  }\n\n  componentDidMount = () => {\n    axios.get('http://localhost:8000/pets').then( res => {\n      this.setState({\n        allPets: res.data.pets\n      });\n    }).catch( err => {\n      console.log(err);\n    })\n  };\n\n  handleName = (e) => {\n    let p = {...this.state.pet};\n    p.name = e.target.value;\n    this.setState ({\n      pet: p\n    });\n  };\n\n  handleSpecies = (e) => {\n    let p = {...this.state.pet};\n    p.species = e.target.value;\n    this.setState ({\n      pet: p\n    });\n  };\n\n  handleDescription = (e) => {\n    let p = {...this.state.pet};\n    p.description = e.target.value;\n    this.setState ({\n      pet: p\n    });\n  };\n\n  handleFirstSkill = (e) => {\n    let p = {...this.state.pet};\n    p.skills[0] = e.target.value;\n    this.setState ({\n      pet: p\n    });\n  };\n  handleSecondSkill = (e) => {\n    let p = {...this.state.pet};\n    p.skills[1] = e.target.value;\n    this.setState ({\n      pet: p\n    });\n  };\n  handleThirdSkill = (e) => {\n    let p = {...this.state.pet};\n    p.skills[2] = e.target.value;\n    this.setState ({\n      pet: p\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    axios.post('http://localhost:8000/pets', this.state.pet).then ( res => {\n      if (res.data.status === \"not ok\"){\n        console.log(res);\n        this.setState({\n          errors: res.data.errors.errors\n        });\n      } else {\n        this.props.history.push('/');\n        console.log(res);\n      }\n    }).catch ( err => {\n      console.log(err);\n    })\n  };\n\n  render () {\n    const { name, species, description } = this.state.pet;\n    return (\n      <div className=\"form-div\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>Pet Name</label>\n            <input className=\"form-control\" type=\"text\" value={name} onChange={this.handleName} />\n            <p>{\n              (this.state.errors.name) ? <span className=\"error\">{this.state.errors.name.message}</span> : <span></span>\n            }</p>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Species</label>\n            <input className=\"form-control\" type=\"text\" value={species} onChange={this.handleSpecies} />\n            <p>{\n              (this.state.errors.species) ? <span className=\"error\">{this.state.errors.species.message}</span> : <span></span>\n            }</p>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Description</label>\n            <input className=\"form-control\" type=\"text\" value={description} onChange={this.handleDescription} />\n            <p>{\n              (this.state.errors.description) ? <span className=\"error\">{this.state.errors.description.message}</span> : <span></span>\n            }</p>\n          </div>\n\n          <div className=\"form-group\">\n            <hr/>\n            <label>Skills (optional)</label>\n            <br/>\n            <label>Skill 1</label>\n            <input className=\"form-control inline\" type=\"text\" onChange={this.handleFirstSkill} />\n            <label>Skill 2</label>\n            <input className=\"form-control inline\" type=\"text\" onChange={this.handleSecondSkill} />\n            <label>Skill 3</label>\n            <input className=\"form-control inline\" type=\"text\" onChange={this.handleThirdSkill} />\n          </div>\n          <input type=\"submit\" className=\"btn btn-outline-primary\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default NewPet;","import {Component} from \"react\";\nimport React from \"react\";\nimport axios from 'axios';\n\nclass ThisPet extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      pet: {\n        name: '',\n        species: '',\n        description: '',\n        skills: [],\n        likes: 0\n      }\n    }\n  }\n\n  componentDidMount = () => {\n    console.log(this.props.match.params._id);\n    axios.get(`http://localhost:8000/pets/${this.props.match.params._id}`).then ( res => {\n      this.setState({\n        pet: res.data.pet\n      })\n    }).catch ( err => {\n      console.log(err);\n    })\n  };\n\n  like = (e) => {\n    let p = this.state.pet;\n    p.likes ++;\n    this.setState({\n      pet: p\n    });\n    axios.put(`http://localhost:8000/pets/${this.props.match.params._id}/like`, this.state.pet).then ( res => {\n      console.log(res);\n    }).catch ( err => {\n      console.log(err);\n    })\n    this.refs.btn.setAttribute(\"disabled\", \"disabled\");\n  };\n\n  adopt = (e) => {\n    let id = this.props.match.params._id;\n    axios.delete(`http://localhost:8000/pets/${id}`).then( res => {\n      this.props.history.push('/');\n    }).catch( err => {\n      console.log(err);\n    })\n  };\n\n  render () {\n    let skills = '';\n    for (let i in this.state.pet.skills){\n      if(this.state.pet.skills[i] !== \"\") {\n        skills += this.state.pet.skills[ i ];\n        skills += \", \";\n      }\n    }\n    return (\n      <div className=\"table-div\">\n        <table className=\"table table-light table-striped\">\n          <tbody>\n            <tr>\n              <td className=\"colwidth1\">Name:</td>\n              <td>{this.state.pet.name}</td>\n            </tr>\n            <tr>\n              <td className=\"colwidth1\">Species:</td>\n              <td>{this.state.pet.species}</td>\n            </tr>\n            <tr>\n              <td className=\"colwidth1\">Description:</td>\n              <td>{this.state.pet.description}</td>\n            </tr>\n            <tr>\n              <td className=\"colwidth1\">Skills:</td>\n              <td>{skills}</td>\n            </tr>\n          <tr>\n            <td className=\"colwidth1\">Likes</td>\n            <td>{this.state.pet.likes}</td>\n          </tr>\n          </tbody>\n        </table>\n        <button ref=\"btn\" className=\"btn btn-outline-primary\" onClick={this.like}>Like</button>\n        <button className=\"btn btn-outline-primary\" onClick={this.adopt}>Adopt</button>\n      </div>\n    )\n  }\n}\n\nexport default ThisPet;","import {Component} from \"react\";\nimport React from \"react\";\nimport axios from 'axios';\n\nclass EditPet extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      newPet: {\n        name: '',\n        species: '',\n        description: '',\n        skills: ['', '', '']\n      },\n      oldPet: {\n        name: '',\n        species: '',\n        description: '',\n        skills: ['', '', '']\n      },\n      errors: {\n        name: '',\n        species: '',\n        description: ''\n      }\n    }\n  }\n\n  componentDidMount = () => {\n    console.log(this.props.match.params._id);\n    axios.get(`http://localhost:8000/pets/${this.props.match.params._id}`).then( res => {\n      this.setState({\n        oldPet: res.data.pet,\n        newPet: res.data.pet\n      })\n    }).catch( err => {\n      console.log(err);\n    })\n  };\n\n  handleName = (e) => {\n    let p = {...this.state.newPet};\n    p.name = e.target.value;\n    this.setState({\n      newPet: p\n    })\n  };\n\n  handleSpecies = (e) => {\n    let p = {...this.state.newPet};\n    p.species = e.target.value;\n    this.setState({\n      newPet: p\n    })\n  };\n\n  handleDescription = (e) => {\n    let p = {...this.state.newPet};\n    p.description = e.target.value;\n    this.setState({\n      newPet: p\n    })\n  };\n\n  handleFirstSkill = (e) => {\n    let p = {...this.state.newPet};\n    p.skills[0] = e.target.value;\n    this.setState({\n      newPet: p\n    })\n  };\n\n  handleSecondSkill = (e) => {\n    let p = {...this.state.newPet};\n    p.skills[1] = e.target.value;\n    this.setState({\n      newPet: p\n    })\n  };\n\n  handleThirdSkill = (e) => {\n    let p = {...this.state.newPet};\n    p.skills[2] = e.target.value;\n    this.setState({\n      newPet: p\n    })\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(this.state.newPet);\n    axios.put(`http://localhost:8000/pets/${this.props.match.params._id}`, this.state.newPet).then( res => {\n      if (res.data.status === \"not ok\"){\n        console.log(res);\n        this.setState({\n          errors: res.data.errors.errors\n        })\n      } else {\n        this.props.history.push(`/pet/${this.props.match.params._id}`);\n        console.log(res);\n      }\n    }).catch( err => {\n      console.log(err);\n    });\n  };\n\n  cancel = (e) => {\n    this.props.history.push('/');\n  };\n\n\n  render () {\n    let { name, species, description } = this.state.newPet;\n    return (\n      <div className=\"form-div\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>Pet Name</label>\n            <input className=\"form-control\" type=\"text\" value={name} onChange={this.handleName} />\n            <p>{\n              (this.state.errors.name) ? <span className=\"error\">{this.state.errors.name.message}</span> : <span></span>\n            }</p>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Species</label>\n            <input className=\"form-control\" type=\"text\" value={species} onChange={this.handleSpecies} />\n            <p>{\n              (this.state.errors.species) ? <span className=\"error\">{this.state.errors.species.message}</span> : <span></span>\n            }</p>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Description</label>\n            <input className=\"form-control\" type=\"text\" value={description} onChange={this.handleDescription} />\n            <p>{\n              (this.state.errors.description) ? <span className=\"error\">{this.state.errors.description.message}</span> : <span></span>\n            }</p>\n          </div>\n\n          <div className=\"form-group\">\n            <hr/>\n            <label>Skills (optional)</label>\n            <br/>\n            <label>Skill 1</label>\n            <input className=\"form-control inline\" type=\"text\" value={this.state.oldPet.skills[0]} onChange={this.handleFirstSkill} />\n            <label>Skill 2</label>\n            <input className=\"form-control inline\" type=\"text\" value={this.state.oldPet.skills[1]} onChange={this.handleSecondSkill} />\n            <label>Skill 3</label>\n            <input className=\"form-control inline\" type=\"text\" value={this.state.oldPet.skills[2]} onChange={this.handleThirdSkill} />\n          </div>\n          <input type=\"submit\" className=\"btn btn-outline-primary\" />\n          <button className=\"btn btn-outline-danger\" onClick={this.cancel} >Cancel</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default EditPet;","import React, { Component } from 'react';\nimport './App.css';\nimport Pets from './components/Pets';\nimport NewPet from './components/NewPet';\nimport ThisPet from './components/ThisPet';\nimport EditPet from './components/EditPet';\nimport \"react-router\";\nimport {\n  BrowserRouter,\n  Route,\n  Link\n} from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1>Pet Shelter</h1>\n          <h2>These pets are looking for a home!</h2>\n        </div>\n        <BrowserRouter>\n          <div>\n            <ul className=\"nav\">\n              <li><Link className=\"btn btn-outline-secondary bottom-margin\" to=\"/\" >Home</Link></li>\n              <li><Link className=\"btn btn-outline-secondary bottom-margin\" to=\"/pets/new\" >Add a Pet</Link></li>\n            </ul>\n            <Route exact path=\"/\" component={Pets} />\n            <Route path=\"/pets/new\" component={NewPet} />\n            <Route exact path=\"/pet/:_id\" component={ThisPet} />\n            <Route path=\"/pets/:_id/edit\" component={EditPet} />\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}